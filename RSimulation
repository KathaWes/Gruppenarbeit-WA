rm(list = ls()) #loescht alle derzeitigen values
set.seed(123)

df = data.frame(matrix(ncol = 5, nrow = 100))
colnames(df) <- c('Alter', 'Studienfach', 'InteresseAnMathematik', 'InteresseAnProgrammieren', 'MatheLK')

Alter = round(rnorm(100,25,2)) #Vektor mit 100 zufälligen normalverteilten Werten mit EW = 25 und sd = 2
Studium = c("Statistik", "Data Science", "Mathe", "Informatik") #Vektor mit vier vorgegebenen Studiengängen
MatheInteresse = c(1,2,3,4,5,6,7)
ProgrammierenInteresse = c(1,2,3,4,5,6,7)
MatheLKJaNein = c("Ja", "Nein")

Studienfach = sample(Studium , 100, replace = TRUE, prob = c(0.3, 0.3, 0.16, 0.24)) #Waehlt mit verschiedenen Wahrscheinlichkeiten aus den Studiengaengen 100 mal aus

Statistiker = which(Studienfach == "Statistik") #Indize aller Statistik Studenten
Data_Scientists = which(Studienfach == "Data Science") #Indize aller Data Scientist Studenten
Informatiker = which(Studienfach == "Informatik") #Indize aller Informatik Studenten
Mathematiker = which(Studienfach == "Mathe") #Indize aller Mathe Studenten


#In den nächsten 8 Sample Funktionen werden die Vektoren erstellt mit der Länge der Anzahl der Studierenden aus den verschiedenen Studiengängen.
#Dabei werden die Wahrscheinlichkeiten der jeweiligen Studienfächern nach einfacher Logik angegeben.

MIM = sample(MatheInteresse, length(which(Studienfach == "Mathe")), replace = TRUE, prob = c(0, 0, 0.01, 0.05, 0.19, 0.4, 0.35))
MIS = sample(MatheInteresse, length(which(Studienfach == "Statistik")), replace = TRUE, prob = c(0, 0.03, 0.13, 0.17, 0.3, 0.22, 0.15))
MID = sample(MatheInteresse, length(which(Studienfach == "Data Science")), replace = TRUE, prob = c(0.08, 0.14, 0.2, 0.22, 0.17, 0.12, 0.07))
MII = sample(MatheInteresse, length(which(Studienfach == "Informatik" )), replace = TRUE, prob = c(0.1, 0.17, 0.22, 0.22, 0.15, 0.09, 0.05))

PIM = sample(ProgrammierenInteresse, length(which(Studienfach == "Mathe")), replace = TRUE, prob = c(0.15, 0.22, 0.25 , 0.17 , 0.11, 0.07, 0.03))
PIS = sample(ProgrammierenInteresse, length(which(Studienfach == "Statistik")), replace = TRUE, prob = c(0.04, 0.09, 0.25, 0.3, 0.2, 0.08, 0.04))
PID = sample(ProgrammierenInteresse, length(which(Studienfach == "Data Science")), replace = TRUE, prob = c(0, 0.04, 0.17, 0.25, 0.25, 0.17, 0.12))
PII = sample(ProgrammierenInteresse, length(which(Studienfach == "Informatik" )), replace = TRUE, prob = c(0, 0, 0.05, 0.15, 0.22 , 0.31, 0.27))


#Wir erstellen einen Vektor, in dem wir die Werte für das Interesse an Mathe an die passenden Indizes setzen.
#Dazu durchlaufen wir eine Schleife, die in jedem Durchlauf überprüft, welches Studienfach am Index i vorliegt.
#Dann wird aus dem passenden Vektor der passende Wert auf den Index i in unserem neu erstellten Vektor gesetzt.

IntMatArr = c()

#Wir benötigen vier Variablen, um die vier oben bestimmten Vektoren (MIM, MIS, MID & MII) zu durchlaufen.
j=1
k=1
l=1
m=1

for(i in 1:100)
{
  if(Studienfach[i] == "Mathe")
  {
    IntMatArr[Mathematiker[j]] = MIM[j]
    j = j+1
  }
  else if(Studienfach[i] == "Statistik")
  {
    IntMatArr[Statistiker[k]] = MIS[k]
    k = k+1
  }
  else if(Studienfach[i] == "Data Science")
  {
    IntMatArr[Data_Scientists[l]] = MID[l]
    l = l+1
  }
  else
  {
    IntMatArr[Informatiker[m]] = MII[m]
    m = m+1
  }
}
IntMatArr
#Analog für Interesse am Programmieren:

IntProArr = c()

n=1
o=1
p=1
q=1

for(r in 1:100)
{
  if(Studienfach[r] == "Mathe")
  {
    IntProArr[Mathematiker[n]] = PIM[n]
    n = n+1
  }
  else if(Studienfach[r] == "Statistik")
  {
    IntProArr[Statistiker[o]] = PIS[o]
    o = o+1
  }
  else if(Studienfach[r] == "Data Science")
  {
    IntProArr[Data_Scientists[p]] = PID[p]
    p = p+1
  }
  else
  {
    IntProArr[Informatiker[q]] = PII[q]
    q = q+1
  }
}


#Hier unten folgen vier Vektoren mit den Antworten der Studenten, ob sie einen Mathe LK belegt hatten.
#Für alle vier Studiengänge setzen sich unterschiedliche Wahrscheinlichkeiten für die Antworten zusammen.
#Wieder sind die Verteilungen nach Logik gefallen.

MatheMatheLK = sample(MatheLKJaNein, length(which(Studienfach == "Mathe")), replace = TRUE, prob = c(0.9, 0.1))
StatistikMatheLK = sample(MatheLKJaNein, length(which(Studienfach == "Statistik")), replace = TRUE, prob = c(0.8, 0.2))
DataScienceMatheLK = sample(MatheLKJaNein, length(which(Studienfach == "Data Science")), replace = TRUE, prob = c(0.6,0.4))
InformatikMatheLK = sample(MatheLKJaNein, length(which(Studienfach == "Informatik" )), replace = TRUE, prob = c(0.33, 0.67))


#Analoge Schleife wie im obigen Fällen

n=1
o=1
p=1
q=1

LKArr = c()

for(r in 1:100)
{
  if(Studienfach[r] == "Mathe")
  {
    LKArr[Mathematiker[n]] = MatheMatheLK[n]
    n = n+1
  }
  else if(Studienfach[r] == "Statistik")
  {
    LKArr[Statistiker[o]] = StatistikMatheLK[o]
    o = o+1
  }
  else if(Studienfach[r] == "Data Science")
  {
    LKArr[Data_Scientists[p]] = DataScienceMatheLK[p]
    p = p+1
  }
  else
  {
    LKArr[Informatiker[q]] = InformatikMatheLK[q]
    q = q+1
  }
}
